# Generated by Django 3.0.8 on 2020-07-17 09:41

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('client_name', models.CharField(help_text='Required. 150 characters or fewer.', max_length=150, verbose_name='Client name')),
                ('email', models.EmailField(error_messages={'unique': 'A client with that email already exists.'}, help_text='Required.example: sample@xyz.com', max_length=150, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.', verbose_name='active')),
                ('file_tree', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='File Tree')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date joined')),
                ('IF', models.CharField(max_length=50, null=True, verbose_name='IF')),
                ('RDC', models.CharField(max_length=50, null=True, verbose_name='RDC')),
                ('TP', models.CharField(max_length=50, null=True, verbose_name='TP')),
                ('ICE', models.CharField(max_length=50, null=True, verbose_name='ICE')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
